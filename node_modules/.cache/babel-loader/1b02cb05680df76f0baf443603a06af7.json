{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\other'\\\\login_page\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/store/auth-context'; // import Modal from './components/UI/Modal/Modal'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState({});\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setUserName({\n      email: email,\n      password: password\n    });\n    localStorage.setItem('isLogged', '1');\n    setIsLoggedIn(true);\n  };\n\n  useEffect(() => {\n    const storedvalue = localStorage.getItem('isLogged');\n\n    if (storedvalue === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    loca;\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        liftinUp: userName\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"QmdVjNLOapJzq7XunWXc0aVF0SI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/other'/login_page/src/App.js"],"names":["React","useEffect","useState","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","userName","setUserName","loginHandler","email","password","localStorage","setItem","storedvalue","getItem","logoutHandler","loca","onLogout","liftinUp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA;AACAH,IAAAA,WAAW,CAAC;AAAEE,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,QAAQ,EAAEA;AAA1B,KAAD,CAAX;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgC,GAAhC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAND;;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,WAAW,GAAGF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAApB;;AACA,QAAID,WAAW,KAAK,GAApB,EAAyB;AACxBR,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GALQ,EAKP,EALO,CAAT;;AAOA,QAAMU,aAAa,GAAG,MAAM;AAC3BC,IAAAA,IAAI;AACJX,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAKA,sBACC,QAAC,KAAD,CAAO,QAAP;AAAA,2BACC,QAAC,WAAD,CAAa,QAAb;AACC,MAAA,KAAK,EAAE;AACND,QAAAA,UAAU,EAAEA,UADN;AAENa,QAAAA,QAAQ,EAAEF,aAFJ;AAGNG,QAAAA,QAAQ,EAAEZ;AAHJ,OADR;AAAA,8BAOC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAPD,eAQC;AAAA,mBACE,CAACF,UAAD,iBAAe,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEEJ,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA;;GAzCQZ,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport Login from './components/Login/Login'\nimport Home from './components/Home/Home'\nimport MainHeader from './components/MainHeader/MainHeader'\nimport AuthContext from './components/store/auth-context'\n// import Modal from './components/UI/Modal/Modal'\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\tconst [userName, setUserName] = useState({})\n\n\tconst loginHandler = (email, password) => {\n\t\t// We should of course check email and password\n\t\t// But it's just a dummy/ demo anyways\n\t\tsetUserName({ email: email, password: password })\n\t\tlocalStorage.setItem('isLogged','1')\n\t\tsetIsLoggedIn(true)\n\t}\n\n\tuseEffect(() => {\n\t\tconst storedvalue = localStorage.getItem('isLogged')\n\t\tif (storedvalue === '1') {\n\t\t\tsetIsLoggedIn(true)\n\t\t}\n\t},[])\n\n\tconst logoutHandler = () => {\n\t\tloca\n\t\tsetIsLoggedIn(false)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AuthContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tisLoggedIn: isLoggedIn,\n\t\t\t\t\tonLogout: logoutHandler,\n\t\t\t\t\tliftinUp: userName,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MainHeader />\n\t\t\t\t<main>\n\t\t\t\t\t{!isLoggedIn && <Login onLogin={loginHandler} />}\n\t\t\t\t\t{isLoggedIn && <Home onLogout={logoutHandler} />}\n\t\t\t\t</main>\n\t\t\t</AuthContext.Provider>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}